/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/validate_register.js":
/*!*******************************************!*\
  !*** ./resources/js/validate_register.js ***!
  \*******************************************/
/***/ (() => {

eval("function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar regUsername = document.getElementById('regUsername');\nvar regPassword = document.getElementById('regPassword');\nvar regConfirmPassword = document.getElementById('regConfirmPass');\nvar regAccountType = document.getElementById('accountType');\nvar regEmail = document.getElementById('email');\nvar regFirstname = document.getElementById('firstname');\nvar regLastname = document.getElementById('lastname');\nvar regBirthdate = document.getElementById('birthdate');\nvar regGender = document.getElementById('genderOptions');\nvar regAddress = document.getElementById('address');\nvar regContact = document.getElementById('contact');\nvar reSpaces = /^\\S*$/;\nvar reName = /^[A-Za-z]+([A-Za-z]+)*$/;\nvar reLName = /^[A-Za-z]+([A-Za-z]+)*/;\nvar reAdd = /^(\\d+)|[A-Za-z]+([A-Za-z]+)*/;\nvar reDate = /^(0?[1-9]|1[0-2])\\/([0-2]?[1-9]|[1-3][01])\\/\\d{4}$/;\nvar reContact = /^[0][1-9]\\d{9}|^[6][1-9]\\d{10}/; //Regular expression accepting numbers starting with 09 or 639\n\nfunction addBlur() {\n  regUsername.addEventListener('blur', validateUsername);\n  regPassword.addEventListener('blur', validatePassword);\n  regConfirmPassword.addEventListener('blur', validateConfirmPassword);\n  regAccountType.addEventListener('blur', validateAccountType);\n  regEmail.addEventListener('blur', validateEmail);\n  regFirstname.addEventListener('blur', validateFirstname);\n  regLastname.addEventListener('blur', validateLastname);\n  regBirthdate.addEventListener('blur', validateBirthdate);\n  regGender.addEventListener('blur', validateGender);\n  regAddress.addEventListener('blur', validateAddress);\n  regContact.addEventListener('blur', validateContact);\n}\n\nfunction validateUsername() {\n  // Performs reg expression test to the value of the variable username\n  if (regUsername.value === \"\" || regUsername.value == null) {\n    regUsername.classList.remove('is-valid');\n    regUsername.classList.add('is-invalid');\n    return false;\n  } else if (reSpaces.test(regUsername.value)) {\n    // removes the class 'is-invalid' attribute\n    regUsername.classList.remove('is-invalid');\n    regUsername.classList.add('is-valid');\n    return true;\n  } else {\n    regUsername.classList.remove('is-valid');\n    regUsername.classList.add('is-invalid');\n    return false;\n  }\n}\n\nfunction validatePassword() {\n  // Password must contain an uppercase letter, a number and must be at least 8 characters long\n  var re = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).*$/;\n\n  if (re.test(regPassword.value) && reSpaces.test(regPassword.value)) {\n    regPassword.classList.remove('is-invalid');\n    regPassword.classList.add('is-valid');\n    return true;\n  } else {\n    regPassword.classList.add('is-invalid');\n    regPassword.classList.remove('is-valid');\n    return false;\n  }\n}\n\nfunction validateConfirmPassword() {\n  // Confirm password must be the same value as password and password not be empty\n  if (regConfirmPassword.value === regPassword.value && regPassword.value !== \"\") {\n    regConfirmPassword.classList.remove('is-invalid');\n    regConfirmPassword.classList.add('is-valid');\n    return true;\n  } else {\n    regConfirmPassword.classList.add('is-invalid');\n    regConfirmPassword.classList.remove('is-valid');\n    return false;\n  }\n}\n\nfunction validateAccountType() {\n  // If any of the account is 'customer' or 'seller' it will be passed\n  if (regAccountType.value === 'customer' || regAccountType.value === 'seller') {\n    regAccountType.classList.remove('is-invalid');\n    regAccountType.classList.add('is-valid');\n    return true;\n  } else {\n    regAccountType.classList.add('is-invalid');\n    regAccountType.classList.remove('is-valid');\n    return false;\n  }\n}\n\nfunction validateEmail() {\n  // accepts anyname@anyname.com\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (re.test(regEmail.value)) {\n    regEmail.classList.remove('is-invalid');\n    regEmail.classList.add('is-valid');\n    return true;\n  } else {\n    regEmail.classList.add('is-invalid');\n    regEmail.classList.remove('is-valid');\n    return false;\n  }\n}\n\nfunction validateFirstname() {\n  // Checks if the firstname has any whitespaces\n  if (reName.test(regFirstname.value)) {\n    regFirstname.classList.remove('is-invalid');\n    regFirstname.classList.add('is-valid');\n    return true;\n  } else {\n    regFirstname.classList.remove('is-valid');\n    regFirstname.classList.add('is-invalid');\n    return false;\n  }\n}\n\nfunction validateLastname() {\n  // Accepts last names with spaces\n  if (reLName.test(regLastname.value) && regLastname.value !== \"\") {\n    regLastname.classList.remove('is-invalid');\n    regLastname.classList.add('is-valid');\n    return true;\n  } else {\n    regLastname.classList.remove('is-valid');\n    regLastname.classList.add('is-invalid');\n    return false;\n  }\n}\n\nfunction validateBirthdate() {\n  /*Checks if the birthdate chosen is valid by comparing the current date and the\n   inputted date.\n    */\n  // creates a new date object representing the current date\n  var currentDate = new Date(); // creates a new date obj with the value of the birthDate field\n\n  var birthdate = new Date(regBirthdate.value);\n\n  if (reDate.test(regBirthdate.value) && birthdate < currentDate) {\n    regBirthdate.classList.remove('is-invalid');\n    regBirthdate.classList.add('is-valid');\n    return true;\n  } else {\n    regBirthdate.classList.remove('is-valid');\n    regBirthdate.classList.add('is-invalid');\n    return false;\n  }\n}\n\nfunction validateGender() {\n  if (regGender.value === 'm' || regGender.value === 'f' || regGender.value === 'o') {\n    regGender.classList.remove('is-invalid');\n    regGender.classList.add('is-valid');\n    return true;\n  } else {\n    regGender.classList.remove('is-valid');\n    regGender.classList.add('is-invalid');\n    return false;\n  }\n}\n\nfunction validateAddress() {\n  if (reAdd.test(regAddress.value) && regAddress.value.length > 10) {\n    regAddress.classList.remove('is-invalid');\n    regAddress.classList.add('is-valid');\n    return true;\n  } else {\n    regAddress.classList.remove('is-valid');\n    regAddress.classList.add('is-invalid');\n    return false;\n  }\n}\n\nfunction validateContact() {\n  if (reContact.test(regContact.value)) {\n    regContact.classList.remove('is-invalid');\n    regContact.classList.add('is-valid');\n    return true;\n  } else {\n    regContact.classList.remove('is-valid');\n    regContact.classList.add('is-invalid');\n    return false;\n  }\n}\n\n(function () {\n  // const forms = document.querySelectorAll('.needs-validation');\n  var forms = document.getElementById('registerForm');\n\n  var _iterator = _createForOfIteratorHelper(forms),\n      _step;\n\n  try {\n    var _loop = function _loop() {\n      var form = _step.value;\n      form.addEventListener('submit', function (event) {\n        if (!form.checkValidity() || !validateUsername() || !validatePassword() || !validateConfirmPassword() || !validateEmail() || !validateFirstname() || !validateLastname() || !validateBirthdate() || !validateGender() || !validateAddress() || !validateContact()) {\n          event.preventDefault();\n          event.stopPropagation();\n        } else {\n          form.classList.add('was-validated');\n        }\n      }, false);\n    };\n\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop();\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n})();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/validate_register.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/validate_register.js"]();
/******/
/******/ })()
;
