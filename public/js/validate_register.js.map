{"version":3,"file":"/js/validate_register.js","mappings":"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","sources":["webpack:///./resources/js/validate_register.js"],"sourcesContent":["// const regUsername = document.getElementById('regUsername');\n// const regPassword = document.getElementById('regPassword');\n// const regConfirmPassword = document.getElementById('regConfirmPass');\n// const regAccountType = document.getElementById('accountType');\n// const regEmail = document.getElementById('email');\n// const regFirstname = document.getElementById('firstname');\n// const regLastname = document.getElementById('lastname');\n// const regBirthdate = document.getElementById('birthdate');\n// const regGender = document.getElementById('genderOptions');\n// const regAddress = document.getElementById('address');\n// const regContact = document.getElementById('contact');\n\nconst reSpaces = /^\\S*$/;\n\nconst reName = /^[A-Za-z]+([A-Za-z]+)*$/;\n\nconst reLName = /^[A-Za-z]+([A-Za-z]+)*/\n\nconst reAdd = /^(\\d+)|[A-Za-z]+([A-Za-z]+)*/;\n\nconst reDate = /^(0?[1-9]|1[0-2])\\/([0-2]?[1-9]|[1-3][01])\\/\\d{4}$/;\n\nconst reContact = /^[0][1-9]\\d{9}|^[6][1-9]\\d{10}/; //Regular expression accepting numbers starting with 09 or 639\n\n\n\ntest.addEventListener('blur', validateUsername);\ntest2.addEventListener('blur', validatePassword);\ntest3.addEventListener('blur', validateConfirmPassword);\n// regAccountType.addEventListener('blur', validateAccountType);\n// regEmail.addEventListener('blur',validateEmail);\n// regFirstname.addEventListener('blur',validateFirstname);\n// regLastname.addEventListener('blur',validateLastname);\n// regBirthdate.addEventListener('blur',validateBirthdate);\n// regGender.addEventListener('blur', validateGender);\n// regAddress.addEventListener('blur',validateAddress);\n// regContact.addEventListener('blur',validateContact);\n\n\n\nfunction validateUsername() {\n    // Performs reg expression test to the value of the variable username\n    if (regUsername.value === \"\" || regUsername.value == null) {\n        regUsername.classList.remove('is-valid');\n        regUsername.classList.add('is-invalid');\n        return false\n    } else if (reSpaces.test(regUsername.value)) {\n        // removes the class 'is-invalid' attribute\n        regUsername.classList.remove('is-invalid');\n        regUsername.classList.add('is-valid');\n        return true;\n    } else {\n        regUsername.classList.remove('is-valid');\n        regUsername.classList.add('is-invalid');\n        return false\n    }\n}\n\nfunction validatePassword() {\n    // Password must contain an uppercase letter, a number and must be at least 8 characters long\n    const re = /^(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).*$/;\n\n    if (re.test(regPassword.value) && reSpaces.test(regPassword.value)) {\n        regPassword.classList.remove('is-invalid');\n        regPassword.classList.add('is-valid');\n        return true;\n    } else {\n        regPassword.classList.add('is-invalid');\n        regPassword.classList.remove('is-valid');\n        return false;\n    }\n}\n\nfunction validateConfirmPassword() {\n    // Confirm password must be the same value as password and password not be empty\n    if (regConfirmPassword.value === regPassword.value && regPassword.value !== \"\") {\n        regConfirmPassword.classList.remove('is-invalid');\n        regConfirmPassword.classList.add('is-valid');\n        return true;\n    }else{\n        regConfirmPassword.classList.add('is-invalid');\n        regConfirmPassword.classList.remove('is-valid');\n        return false;\n    }\n}\n\nfunction validateAccountType() {\n    // If any of the account is 'customer' or 'seller' it will be passed\n    if (regAccountType.value === 'customer' || regAccountType.value === 'seller') {\n        regAccountType.classList.remove('is-invalid');\n        regAccountType.classList.add('is-valid');\n        return true;\n    } else {\n        regAccountType.classList.add('is-invalid');\n        regAccountType.classList.remove('is-valid');\n        return false;\n    }\n}\n\nfunction validateEmail() {\n    // accepts anyname@anyname.com\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if(re.test(regEmail.value)){\n        regEmail.classList.remove('is-invalid');\n        regEmail.classList.add('is-valid');\n        return true;\n    }else{\n        regEmail.classList.add('is-invalid');\n        regEmail.classList.remove('is-valid');\n        return false;\n    }\n}\n\nfunction validateFirstname(){\n    // Checks if the firstname has any whitespaces\n    if(reName.test(regFirstname.value)){\n        regFirstname.classList.remove('is-invalid');\n        regFirstname.classList.add('is-valid');\n        return true;\n    }else{\n        regFirstname.classList.remove('is-valid');\n        regFirstname.classList.add('is-invalid');\n        return false;\n    }\n}\n\nfunction validateLastname(){\n    // Accepts last names with spaces\n    if(reLName.test(regLastname.value) && regLastname.value !== \"\"){\n        regLastname.classList.remove('is-invalid');\n        regLastname.classList.add('is-valid');\n        return true;\n    }else{\n        regLastname.classList.remove('is-valid');\n        regLastname.classList.add('is-invalid');\n        return false;\n    }\n}\n\nfunction validateBirthdate(){\n    /*Checks if the birthdate chosen is valid by comparing the current date and the\n     inputted date.\n\n     */\n    // creates a new date object representing the current date\n    let currentDate = new Date();\n\n    // creates a new date obj with the value of the birthDate field\n    let birthdate = new Date(regBirthdate.value);\n\n    if(reDate.test(regBirthdate.value) && birthdate < currentDate){\n        regBirthdate.classList.remove('is-invalid');\n        regBirthdate.classList.add('is-valid');\n        return true;\n    }else{\n        regBirthdate.classList.remove('is-valid');\n        regBirthdate.classList.add('is-invalid');\n        return false;\n    }\n}\n\nfunction validateGender(){\n\n    if(regGender.value === 'm' || regGender.value === 'f' || regGender.value === 'o'){\n        regGender.classList.remove('is-invalid');\n        regGender.classList.add('is-valid');\n        return true;\n    }else{\n        regGender.classList.remove('is-valid');\n        regGender.classList.add('is-invalid');\n        return false;\n    }\n}\n\nfunction validateAddress(){\n\n    if(reAdd.test(regAddress.value) && regAddress.value.length > 10){\n        regAddress.classList.remove('is-invalid');\n        regAddress.classList.add('is-valid');\n        return true;\n    }else{\n        regAddress.classList.remove('is-valid');\n        regAddress.classList.add('is-invalid');\n        return false;\n    }\n}\n\nfunction validateContact(){\n\n    if(reContact.test(regContact.value)){\n        regContact.classList.remove('is-invalid');\n        regContact.classList.add('is-valid');\n        return true;\n    }else{\n        regContact.classList.remove('is-valid');\n        regContact.classList.add('is-invalid');\n        return false;\n    }\n}\n\n(function () {\n    // const forms = document.querySelectorAll('.needs-validation');\n    const forms = document.getElementById('registerForm');\n\n    for (let form of forms) {\n        form.addEventListener(\n            'submit',\n            function (event) {\n                if (\n                    !form.checkValidity() ||\n                    !validateUsername() ||\n                    !validatePassword() ||\n                    !validateConfirmPassword() ||\n                    !validateEmail() ||\n                    !validateFirstname() ||\n                    !validateLastname() ||\n                    !validateBirthdate() ||\n                    !validateGender() ||\n                    !validateAddress() ||\n                    !validateContact()\n\n                ) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                } else {\n                    form.classList.add('was-validated');\n                }\n            },\n            false\n        );\n    }\n})();\n\n\n"],"names":["reSpaces","reName","reLName","reAdd","reDate","reContact","validateUsername","regUsername","value","classList","remove","add","test","validatePassword","regPassword","validateConfirmPassword","regConfirmPassword","addEventListener","test2","test3","document","getElementById","form","event","currentDate","birthdate","checkValidity","regEmail","regFirstname","regLastname","Date","regBirthdate","regGender","regAddress","length","regContact","preventDefault","stopPropagation"],"sourceRoot":""}